{"ast":null,"code":"import{CREATE_ORDER_REQUEST,CREATE_ORDER_SUCCESS,CREATE_ORDER_FAIL,MY_ORDERS_REQUEST,MY_ORDERS_SUCCESS,MY_ORDERS_FAIL,ALL_ORDERS_REQUEST,ALL_ORDERS_SUCCESS,ALL_ORDERS_FAIL,UPDATE_ORDER_REQUEST,UPDATE_ORDER_SUCCESS,UPDATE_ORDER_FAIL,DELETE_ORDER_REQUEST,DELETE_ORDER_SUCCESS,DELETE_ORDER_FAIL,ORDER_DETAILS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_FAIL,CLEAR_ERRORS}from\"../constants/orderConstants\";import axios from\"axios\";// Create Order\nexport const createOrder=order=>async dispatch=>{try{dispatch({type:CREATE_ORDER_REQUEST});const config={headers:{\"Content-Type\":\"application/json\"}};const{data}=await axios.post(\"/api/v1/order/new\",order,config);dispatch({type:CREATE_ORDER_SUCCESS,payload:data});}catch(error){dispatch({type:CREATE_ORDER_FAIL,payload:error.response.data.message});}};// My Orders\nexport const myOrders=()=>async dispatch=>{try{dispatch({type:MY_ORDERS_REQUEST});const{data}=await axios.get(\"/api/v1/orders/me\");dispatch({type:MY_ORDERS_SUCCESS,payload:data.orders});}catch(error){dispatch({type:MY_ORDERS_FAIL,payload:error.response.data.message});}};// Get All Orders (admin)\nexport const getAllOrders=()=>async dispatch=>{try{dispatch({type:ALL_ORDERS_REQUEST});const{data}=await axios.get(\"/api/v1/admin/orders\");dispatch({type:ALL_ORDERS_SUCCESS,payload:data.orders});}catch(error){dispatch({type:ALL_ORDERS_FAIL,payload:error.response.data.message});}};// Update Order\nexport const updateOrder=(id,order)=>async dispatch=>{try{dispatch({type:UPDATE_ORDER_REQUEST});const config={headers:{\"Content-Type\":\"application/json\"}};const{data}=await axios.put(\"/api/v1/admin/order/\".concat(id),order,config);dispatch({type:UPDATE_ORDER_SUCCESS,payload:data.success});}catch(error){dispatch({type:UPDATE_ORDER_FAIL,payload:error.response.data.message});}};// Delete Order\nexport const deleteOrder=id=>async dispatch=>{try{dispatch({type:DELETE_ORDER_REQUEST});const{data}=await axios.delete(\"/api/v1/admin/order/\".concat(id));dispatch({type:DELETE_ORDER_SUCCESS,payload:data.success});}catch(error){dispatch({type:DELETE_ORDER_FAIL,payload:error.response.data.message});}};// Get Order Details\nexport const getOrderDetails=id=>async dispatch=>{try{dispatch({type:ORDER_DETAILS_REQUEST});const{data}=await axios.get(\"/api/v1/order/\".concat(id));dispatch({type:ORDER_DETAILS_SUCCESS,payload:data.order});}catch(error){dispatch({type:ORDER_DETAILS_FAIL,payload:error.response.data.message});}};// Clearing Errors\nexport const clearErrors=()=>async dispatch=>{dispatch({type:CLEAR_ERRORS});};","map":{"version":3,"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","CLEAR_ERRORS","axios","createOrder","order","dispatch","type","config","headers","data","post","payload","error","response","message","myOrders","get","orders","getAllOrders","updateOrder","id","put","concat","success","deleteOrder","delete","getOrderDetails","clearErrors"],"sources":["C:/Users/acer/IdeaProjects/mern/frontend/src/actions/orderAction.js"],"sourcesContent":["import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAIL,\r\n  MY_ORDERS_REQUEST,\r\n  MY_ORDERS_SUCCESS,\r\n  MY_ORDERS_FAIL,\r\n  ALL_ORDERS_REQUEST,\r\n  ALL_ORDERS_SUCCESS,\r\n  ALL_ORDERS_FAIL,\r\n  UPDATE_ORDER_REQUEST,\r\n  UPDATE_ORDER_SUCCESS,\r\n  UPDATE_ORDER_FAIL,\r\n  DELETE_ORDER_REQUEST,\r\n  DELETE_ORDER_SUCCESS,\r\n  DELETE_ORDER_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// Create Order\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n\r\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// My Orders\r\nexport const myOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/orders/me\");\r\n\r\n    dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MY_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Orders (admin)\r\nexport const getAllOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/admin/orders\");\r\n\r\n    dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update Order\r\nexport const updateOrder = (id, order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/order/${id}`,\r\n      order,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Order\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\r\n\r\n    dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get Order Details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/order/${id}`);\r\n\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}